{"version":3,"sources":["ContactInfo.js","ContactDetails.js","ContactCreate.js","Contact.js","App.js","index.js"],"names":["ContactInfo","onClick","this","props","contact","name","React","Component","ContactDetails","state","isEdit","phone","handleToggle","bind","handleChange","handleEdit","handleKeyPress","setState","console","log","e","nextState","target","value","onEdit","charCode","details","edit","type","placeholder","onChange","onKeyPress","view","blank","isSelected","onRemove","defaultProps","error","ContactCreate","handleClick","onCreate","nameInput","focus","ref","Contact","selectedKey","keyword","contactData","handleCreate","handleRemove","localStorage","JSON","parse","prevProps","prevState","stringify","key","update","$push","$splice","$set","data","sort","filter","toLowerCase","indexOf","map","i","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c1e794ec.chunk.js","sourcesContent":["import React from 'react';  \r\n\r\nexport default class ContactInfo extends React.Component {\r\n    render() {\r\n        return (\r\n            <div onClick={this.props.onClick}>{this.props.contact.name}</div>\r\n        );\r\n    }\r\n}","import React from 'react';  \r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ContactDetails extends React.Component {\r\n    constructor(props){\r\n        super();\r\n\r\n        this.state = {\r\n            isEdit: false,\r\n            name: '',\r\n            phone: ''\r\n        };\r\n\r\n        this.handleToggle = this.handleToggle.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n        this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    }\r\n\r\n    handleToggle() {\r\n        if( !this.state.isEdit ) {\r\n            this.setState({\r\n                name: this.props.contact.name,\r\n                phone: this.props.contact.phone,\r\n            });\r\n        } else {\r\n            this.handleEdit();\r\n        }\r\n        this.setState({  //setState는 비동기\r\n            isEdit: !this.state.isEdit\r\n        });\r\n        console.log(this.state.isEdit);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let nextState = {};\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState)\r\n    }\r\n\r\n    handleEdit() {\r\n        this.props.onEdit(this.state.name, this.state.phone); \r\n    }\r\n\r\n    handleKeyPress(e) {\r\n        if(e.charCode === 13) {\r\n            this.handleToggle();\r\n        }\r\n    }\r\n\r\n    render() {\r\n      \r\n        const details = (\r\n            <div>\r\n                <p>{this.props.contact.name}</p>\r\n                <p>{this.props.contact.phone}</p>\r\n            </div>\r\n        );\r\n\r\n        const edit = (\r\n            <div>\r\n                <p>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"name\" \r\n                        placeholder=\"name\" \r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </p>\r\n                <p>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"phone\" \r\n                        placeholder=\"phone\"\r\n                        value={this.state.phone}\r\n                        onChange={this.handleChange}\r\n                        onKeyPress={this.handleKeyPress}\r\n                    />\r\n                </p>\r\n                \r\n            </div>\r\n        );\r\n\r\n        const view = this.state.isEdit ? edit : details;\r\n\r\n        const blank = (<div>Not Selected</div>);\r\n\r\n        return (\r\n            <div>   \r\n                <h2>Details</h2>\r\n                {this.props.isSelected ? view : blank}\r\n                <p>\r\n                    <button onClick={this.handleToggle}>\r\n                        {this.state.isEdit ? 'OK': 'Edit'}\r\n                    </button>\r\n                    <button onClick={this.props.onRemove}>Remove</button>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nContactDetails.defaultProps = {\r\n    contact: {\r\n        name: '',\r\n        phone: ''\r\n    },\r\n    onRemove: () => {console.error('onRemove not defined')},\r\n    onEdit: () => {console.error('onEdit not defined')}\r\n};\r\n\r\nContactDetails.propTypes = {\r\n    contact: PropTypes.object,\r\n    onEdit: PropTypes.func,\r\n    onRemove: PropTypes.func\r\n\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ContactCreate extends React.Component {\r\n    constructor(props) {\r\n        super()\r\n        this.state = {\r\n            name: '',\r\n            phone: ''\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleKeyPress = this.handleKeyPress.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        let nextState = {};\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState)\r\n    }\r\n\r\n    handleClick() {\r\n        const contact = {\r\n            name: this.state.name,\r\n            phone: this.state.phone\r\n        };\r\n\r\n        this.props.onCreate(contact);\r\n\r\n        this.setState({\r\n            name: '',\r\n            phone: ''\r\n        })\r\n\r\n        this.nameInput.focus();\r\n    }\r\n\r\n    handleKeyPress(e) {\r\n        if(e.charCode === 13) {\r\n            this.handleClick();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Create Contact</h2>\r\n                <p>\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"name\" \r\n                        placeholder=\"name\" \r\n                        value={this.state.name}\r\n                        onChange={this.handleChange}\r\n                        ref={(ref) => {this.nameInput = ref}}   \r\n                    />\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"phone\" \r\n                        placeholder=\"phone\"\r\n                        value={this.state.phone}\r\n                        onChange={this.handleChange}\r\n                        onKeyPress={this.handleKeyPress}\r\n                    />\r\n                </p>\r\n                <button onClick={this.handleClick}>Create</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nContactCreate.propTypes = {\r\n    onCreate: PropTypes.func\r\n};\r\n\r\nContactCreate.defaultProps = {\r\n    onCreate: () => { console.error('onCreate not defined')}\r\n}","import React from 'react';\r\nimport ContactInfo from './ContactInfo';\r\nimport ContactDetails from './ContactDetails';\r\nimport ContactCreate from './ContactCreate';\r\n\r\nimport update from 'react-addons-update';\r\n\r\nexport default class Contact extends React.Component{\r\n    constructor(props) {  //constructor를 쓸때는 super를 같이 써줘야함. //state 의 초기 값을 설정 할 때는 constructor(생성자) 메소드에서 this.state= { } 를 통하여 설정\r\n        super(props);\r\n        this.state = {\r\n            selectedKey: -1,\r\n            keyword: '',\r\n            contactData: [{\r\n                name: 'Abet',\r\n                phone: '010-0000-0001'\r\n            },{\r\n                name: 'Betty',\r\n                phone: '010-0000-0002'\r\n            },{\r\n                name: 'Charlie',\r\n                phone: '010-0000-0003'\r\n            },{\r\n                name: 'David',\r\n                phone: '010-0000-0004'\r\n            }]\r\n        };\r\n        this.handleChange = this.handleChange.bind(this); //메소드를 만들어줄땐 this와 binding\r\n        this.handleClick = this.handleClick.bind(this);\r\n\r\n        this.handleCreate = this.handleCreate.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        const contactData = localStorage.contactData;\r\n\r\n        if(contactData) {\r\n            this.setState({\r\n                contactData: JSON.parse(contactData)\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (JSON.stringify(prevState.contactData) !== JSON.stringify(this.state.contactData) ) {\r\n            localStorage.contactData = JSON.stringify(this.state.contactData);\r\n        }\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            keyword: e.target.value\r\n        });\r\n    }\r\n\r\n    handleClick(key) {\r\n        this.setState({\r\n            selectedKey: key\r\n        });\r\n    }\r\n\r\n    handleCreate(contact) {\r\n        console.log(contact);\r\n        console.log(this.state.contactData);\r\n        this.setState({\r\n            contactData: update(this.state.contactData, { $push: [contact] } )\r\n        });\r\n    }\r\n\r\n    handleRemove() {\r\n        if(this.state.selectedKey < 0) {\r\n            return;\r\n        }\r\n        this.setState({\r\n            contactData: update(this.state.contactData, \r\n                { $splice: [[this.state.selectedKey, 1]] }\r\n            ),\r\n            selectedKey: -1\r\n        });\r\n    }\r\n\r\n    handleEdit(name, phone) {\r\n        this.setState({\r\n            contactData: update(this.state.contactData, \r\n                {\r\n                    [this.state.selectedKey]: {\r\n                        name: { $set: name },\r\n                        phone: { $set: phone }\r\n                    }\r\n                }\r\n            )\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const mapToComponents = (data) => {\r\n            data.sort();\r\n            data = data.filter(\r\n                (contact) => {\r\n                    return contact.name.toLowerCase()\r\n                        .indexOf(this.state.keyword.toLowerCase()) > -1;\r\n                }\r\n            )\r\n            return data.map((contact, i) => {\r\n                return (<ContactInfo \r\n                            contact={contact} \r\n                            key={i}\r\n                            onClick={() => this.handleClick(i)}/>);  \r\n            });\r\n        }; //render\r\n\r\n        return (\r\n            <div>\r\n                <h1>Contacts</h1>\r\n                <input\r\n                    name=\"keyword\" \r\n                    placeholder=\"Search\"\r\n                    value={this.state.keyword}\r\n                    onChange={this.handleChange}\r\n                />\r\n                <div>{mapToComponents(this.state.contactData)}</div>\r\n                <ContactDetails \r\n                    isSelected={this.state.selectedKey !== -1}\r\n                    contact={this.state.contactData[this.state.selectedKey]}\r\n                    onRemove={this.handleRemove}\r\n                    onEdit={this.handleEdit}\r\n                />\r\n                <ContactCreate\r\n                    onCreate={this.handleCreate}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';  \nimport Contact from './Contact';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Contact/>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}